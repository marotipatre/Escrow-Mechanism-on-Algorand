{
    "name": "EscrowMarketplace",
    "structs": {},
    "methods": [
        {
            "name": "create_application",
            "args": [
                {
                    "type": "uint64",
                    "name": "value"
                },
                {
                    "type": "account",
                    "name": "seller"
                },
                {
                    "type": "account",
                    "name": "buyer"
                },
                {
                    "type": "account",
                    "name": "arbitrator"
                },
                {
                    "type": "uint64",
                    "name": "escrow_duration"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [
                    "NoOp"
                ],
                "call": []
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "deposit_funds",
            "args": [
                {
                    "type": "pay",
                    "name": "payment"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "release_funds_to_seller",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "refund_funds_to_buyer",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "raise_dispute",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "resolve_dispute",
            "args": [
                {
                    "type": "string",
                    "name": "decision"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "expire_escrow",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "delete_application",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "DeleteApplication"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 5,
                "bytes": 3
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "seller": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "c2VsbGVy"
                },
                "buyer": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "YnV5ZXI="
                },
                "arbitrator": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "YXJiaXRyYXRvcg=="
                },
                "amount": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "YW1vdW50"
                },
                "escrow_expiry": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "ZXNjcm93X2V4cGlyeQ=="
                },
                "is_disputed": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "aXNfZGlzcHV0ZWQ="
                },
                "is_settled": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "aXNfc2V0dGxlZA=="
                },
                "value": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dmFsdWU="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        529
                    ],
                    "errorMessage": "Dispute already raised"
                },
                {
                    "pc": [
                        636
                    ],
                    "errorMessage": "Escrow has not expired yet"
                },
                {
                    "pc": [
                        621
                    ],
                    "errorMessage": "Invalid decision"
                },
                {
                    "pc": [
                        562
                    ],
                    "errorMessage": "No dispute to resolve"
                },
                {
                    "pc": [
                        151
                    ],
                    "errorMessage": "OnCompletion is not DeleteApplication"
                },
                {
                    "pc": [
                        163,
                        175,
                        193,
                        205,
                        217,
                        229,
                        251
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        391
                    ],
                    "errorMessage": "Only buyer or arbitrator can release funds"
                },
                {
                    "pc": [
                        522
                    ],
                    "errorMessage": "Only buyer or seller can raise a dispute"
                },
                {
                    "pc": [
                        457
                    ],
                    "errorMessage": "Only seller or arbitrator can refund funds"
                },
                {
                    "pc": [
                        556
                    ],
                    "errorMessage": "Only the arbitrator can resolve disputes"
                },
                {
                    "pc": [
                        334
                    ],
                    "errorMessage": "Only the buyer can deposit funds"
                },
                {
                    "pc": [
                        657
                    ],
                    "errorMessage": "Only the creator can delete the application"
                },
                {
                    "pc": [
                        342
                    ],
                    "errorMessage": "Payment must be sent to the escrow"
                },
                {
                    "pc": [
                        352
                    ],
                    "errorMessage": "Payment must match the asset price"
                },
                {
                    "pc": [
                        358,
                        397,
                        463,
                        535,
                        568,
                        642
                    ],
                    "errorMessage": "Transaction is already settled"
                },
                {
                    "pc": [
                        651
                    ],
                    "errorMessage": "Transaction must be settled before deleting"
                },
                {
                    "pc": [
                        255
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        154,
                        166,
                        178,
                        196,
                        208,
                        220,
                        232
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        377,
                        443,
                        554
                    ],
                    "errorMessage": "check self.arbitrator exists"
                },
                {
                    "pc": [
                        332,
                        369,
                        468,
                        501
                    ],
                    "errorMessage": "check self.buyer exists"
                },
                {
                    "pc": [
                        634
                    ],
                    "errorMessage": "check self.escrow_expiry exists"
                },
                {
                    "pc": [
                        527,
                        561
                    ],
                    "errorMessage": "check self.is_disputed exists"
                },
                {
                    "pc": [
                        356,
                        395,
                        461,
                        533,
                        566,
                        640,
                        650
                    ],
                    "errorMessage": "check self.is_settled exists"
                },
                {
                    "pc": [
                        402,
                        435,
                        508
                    ],
                    "errorMessage": "check self.seller exists"
                },
                {
                    "pc": [
                        350,
                        406,
                        472
                    ],
                    "errorMessage": "check self.value exists"
                },
                {
                    "pc": [
                        242
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiADAAHoByYHCmlzX3NldHRsZWQFYnV5ZXIFdmFsdWUGc2VsbGVyCmFyYml0cmF0b3ILaXNfZGlzcHV0ZWQNZXNjcm93X2V4cGlyeTEbQQA/gggEP+TTmgT9xpXCBDHOdZcENMl5yQRDmCZdBJG0UyoEUSH3QQQzs0meNhoAjggAaABSAEYAOgAuABwAEAACIkMxGYEFEkQxGESIAekjQzEZFEQxGESIAcojQzEZFEQxGEQ2GgFXAgCIAWUjQzEZFEQxGESIASQjQzEZFEQxGESIANYjQzEZFEQxGESIAIgjQzEZFEQxGEQxFiMJSTgQIxJEiABOI0MxGRREMRgURDYaARc2GgIXwBw2GgMXwBw2GgQXwBw2GgUXiAACI0OKBQAqi/tnK4v8ZymL/WcnBIv+ZzIHi/8IJwZMZycFImcoImeJigEAMQAiKWVEEkSL/zgHMgoSRIv/OAgiKmVEEkQiKGVEFESJigAAMQBJIillRCInBGVMTgNEEkAACIsAiwESQQAgI0QiKGVEFESxIitlRCIqZUSyCLIHI7IQJLIBsygjZ4kiQv/digAAMQBJIitlRCInBGVMTgNEEkAACIsAiwESQQAgI0QiKGVEFESxIillRCIqZUSyCLIHI7IQJLIBsygjZ4kiQv/digAAMQBJIillRCIrZUxOA0QSQAAIiwCLARJBABQjRCInBWVEFEQiKGVEFEQnBSNniSJC/+mKAQAxACInBGVEEkQiJwVlREQiKGVEFESL/4ARcmVsZWFzZV90b19zZWxsZXISQQAHiP8TKCNniYv/gA9yZWZ1bmRfdG9fYnV5ZXISRIj/OUL/4TIHIicGZUQPRCIoZUQURIj/JIkiKGVERDEAMgkSRIk=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 4,
            "patch": 4
        }
    },
    "events": [],
    "templateVariables": {}
}